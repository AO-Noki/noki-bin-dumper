# Este workflow instalará dependências do Python, executará testes e lint com uma única versão do Python
# Para mais informações, veja: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]  # Executa o workflow em push para a branch main
  pull_request:
    branches: [ "main" ]  # Executa o workflow em pull requests para a branch main

permissions:
  contents: read  # Permissões para ler o conteúdo do repositório

jobs:
  build:
    runs-on: ubuntu-latest  # O workflow será executado em um ambiente Ubuntu

    steps:
    - uses: actions/checkout@v4  # Faz checkout do código do repositório
    - name: Set up Python 3.10
      uses: actions/setup-python@v3  # Configura a versão do Python
      with:
        python-version: "3.10"  # Define a versão do Python a ser usada

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Atualiza o pip
        pip install flake8 pytest  # Instala flake8 e pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  # Instala dependências do requirements.txt se existir

    - name: Lint with flake8
      run: |
        # Para o build se houver erros de sintaxe Python ou nomes indefinidos
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero trata todos os erros como avisos. O editor do GitHub tem 127 caracteres de largura
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest  # Executa os testes com pytest
